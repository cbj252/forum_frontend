{"version":3,"sources":["components/loginForm.js","components/signupForm.js","components/allThreads.js","helpFunc.js","components/makeNewPost.js","components/oneThreadPageNo.js","components/oneThread.js","components/adminPage.js","App.js","index.js"],"names":["cookies","Cookies","LoginForm","props","_useState","useState","_useState2","Object","slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","react_default","a","createElement","className","htmlFor","name","type","value","onChange","event","target","required","onClick","fetch","process","method","mode","headers","Content-Type","body","JSON","stringify","then","response","json","infoArea","document","getElementById","innerHTML","onChangeToken","token","set","path","window","location","href","catch","error","console","id","SignupForm","data","log","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","unwrapped","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","AllThreads","title","setTitle","content","setContent","useEffect","threadArea","makeThreadArea","authorization","element","appendChild","threadId","threadTitle","mainLi","img","src","alt","style","border","link","classList","createThread","_id","onSubmit","e","preventDefault","_ref","asyncToGenerator","_callee","_context","concat","_x","apply","arguments","postNewThread","MakeNewPost","useParams","reload","postNewPost","OneThreadPageNo","currentthreadUrl","useLocation","pathname","_useSearchParams","useSearchParams","searchParams","startPost","parseInt","get","totalPages","Math","floor","totalPostNo","currentPage","createOneBox","pageNo","loopList","dots","communicator","OneThread","_useSearchParams2","setSearchParams","postNo","setPostNo","postArea","createPost","postContent","time","col1","col2","borderLeft","timestamp","Date","postmaker","changePostLinks","postId","hideEditPanel","display","editBox","editButton","addEventListener","wrapperDiv","editLink","userType","deleteLink","message","newPost","thread","author","getPosts","oneThreadPageNo","makeNewPost","AdminPage","mainBox","ownerArea","adminArea","userArea","oneUser","userId","userName","changeAuthButton","createUser","App","jwttoken","setJwttoken","_useState5","_useState6","setUserType","logout","remove","dist","to","react_router_dist","loginForm","signupForm","adminPage","oneThread","allThreads","ReactDOM","render","StrictMode","src_App"],"mappings":"0RAGMA,EAAU,IAAIC,IA2FLC,EAzFG,SAAmBC,GAAO,IAAAC,EACVC,mBAAS,IAAGC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAArCK,EAAQH,EAAA,GAAEI,EAAWJ,EAAA,GAAAK,EACIN,mBAAS,IAAGO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAmC5B,OACEG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,YAAYC,QAAQ,YAAU,YAG/CJ,EAAAC,EAAAC,cAAA,SACEC,UAAU,YACVE,KAAK,WACLC,KAAK,OACLC,MAAOb,EACPc,SAAU,SAACC,GAAK,OAAKd,EAAYc,EAAMC,OAAOH,QAC9CI,UAAQ,IAEVX,EAAAC,EAAAC,cAAA,SAAOC,UAAU,YAAYC,QAAQ,YAAU,YAG/CJ,EAAAC,EAAAC,cAAA,SACEC,UAAU,YACVE,KAAK,WACLC,KAAK,WACLC,MAAOT,EACPU,SAAU,SAACC,GAAK,OAAKV,EAAYU,EAAMC,OAAOH,QAC9CI,UAAQ,MAIdX,EAAAC,EAAAC,cAAA,UAAQC,UAAU,YAAYS,QAAS,WA9D3CC,MAAMC,qDAAoD,CACxDC,OAAQ,OACRC,KAAM,OACNC,QAAS,CACPC,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnB3B,SAAUA,EACVI,SAAUA,MAGXwB,KAAK,SAACC,GAAQ,OAAKA,EAASC,SAC5BF,KAAK,SAACC,GACL,IAAME,EAAWC,SAASC,eAAe,YACxB,wBAAbJ,EACFE,EAASG,UAAY,qBACC,wBAAbL,EACTE,EAASG,UAAY,sBACD,oBAAbL,EACPE,EAASG,UACP,oDAEFxC,EAAMyC,cAAcN,EAASO,OAC7B7C,EAAQ8C,IAAI,QAASR,EAASO,MAAO,CAAEE,KAAM,MAC7CC,OAAOC,SAASC,KAAO,SAG1BC,MAAM,SAACC,GACNC,QAAQD,MAAM,SAAUA,OAkCkC,UAG1DrC,EAAAC,EAAAC,cAAA,OAAKqC,GAAG,WAAWpC,UAAU,cAC7BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,gGAIAF,EAAAC,EAAAC,cAAA,oIAIAF,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,+BCtBKsC,EA/DI,WAAsB,IAAAnD,EACPC,mBAAS,IAAGC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAArCK,EAAQH,EAAA,GAAEI,EAAWJ,EAAA,GAAAK,EACIN,mBAAS,IAAGO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAuB5B,OACEG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,YAAYC,QAAQ,YAAU,YAG/CJ,EAAAC,EAAAC,cAAA,SACEC,UAAU,YACVE,KAAK,WACLC,KAAK,OACLC,MAAOb,EACPc,SAAU,SAACC,GAAK,OAAKd,EAAYc,EAAMC,OAAOH,QAC9CI,UAAQ,IAEVX,EAAAC,EAAAC,cAAA,SAAOC,UAAU,YAAYC,QAAQ,YAAU,YAG/CJ,EAAAC,EAAAC,cAAA,SACEC,UAAU,YACVE,KAAK,WACLC,KAAK,OACLC,MAAOT,EACPU,SAAU,SAACC,GAAK,OAAKV,EAAYU,EAAMC,OAAOH,QAC9CI,UAAQ,MAIdX,EAAAC,EAAAC,cAAA,UAAQC,UAAU,YAAYS,QAAS,WAlD3CC,MAAMC,sDAAqD,CACzDC,OAAQ,OACRC,KAAM,OACNC,QAAS,CACPC,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnB3B,SAAUA,EACVI,SAAUA,MAGXwB,KAAK,SAACC,GAAQ,OAAKA,EAASC,SAC5BF,KAAK,SAACmB,GACLH,QAAQI,IAAI,WAAYD,KAEzBL,MAAM,SAACC,GACNC,QAAQD,MAAM,SAAUA,OAkCkC,iCCxDlEM,EAAA,kBAAAC,GAAA,IAAAA,EAAA,GAAAC,EAAArD,OAAAsD,UAAAC,EAAAF,EAAAG,eAAAC,EAAAzD,OAAAyD,gBAAA,SAAAC,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAA7C,OAAA8C,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAX,EAAAC,EAAA5C,GAAA,OAAAf,OAAAyD,eAAAC,EAAAC,EAAA,CAAA5C,QAAAuD,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAd,EAAAC,GAAA,IAAAU,EAAA,aAAAI,GAAAJ,EAAA,SAAAX,EAAAC,EAAA5C,GAAA,OAAA2C,EAAAC,GAAA5C,GAAA,SAAA2D,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAAtB,qBAAA0B,EAAAJ,EAAAI,EAAAC,EAAAjF,OAAAkF,OAAAH,EAAAzB,WAAA6B,EAAA,IAAAC,EAAAN,GAAA,WAAArB,EAAAwB,EAAA,WAAAlE,MAAAsE,EAAAV,EAAAE,EAAAM,KAAAF,EAAA,SAAAK,EAAAC,EAAA7B,EAAA8B,GAAA,WAAA1E,KAAA,SAAA0E,IAAAD,EAAAE,KAAA/B,EAAA8B,IAAA,MAAAf,GAAA,OAAA3D,KAAA,QAAA0E,IAAAf,IAAArB,EAAAsB,OAAA,IAAAgB,EAAA,YAAAV,KAAA,SAAAW,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAxB,EAAAwB,EAAA9B,EAAA,kBAAA+B,OAAA,IAAAC,EAAA/F,OAAAgG,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA5C,GAAAE,EAAAkC,KAAAQ,EAAAlC,KAAA8B,EAAAI,GAAA,IAAAE,EAAAP,EAAAtC,UAAA0B,EAAA1B,UAAAtD,OAAAkF,OAAAW,GAAA,SAAAO,EAAA9C,GAAA,0BAAA+C,QAAA,SAAA9E,GAAA8C,EAAAf,EAAA/B,EAAA,SAAAiE,GAAA,OAAAM,KAAAQ,QAAA/E,EAAAiE,OAAA,SAAAe,EAAAtB,EAAAuB,GAAA,IAAAC,EAAAhD,EAAAqC,KAAA,WAAA/E,MAAA,SAAAQ,EAAAiE,GAAA,SAAAkB,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAtF,EAAAiE,EAAAmB,EAAAC,GAAA,IAAAE,EAAAxB,EAAAL,EAAA1D,GAAA0D,EAAAO,GAAA,aAAAsB,EAAAhG,KAAA,KAAAiG,EAAAD,EAAAtB,IAAAzE,EAAAgG,EAAAhG,MAAA,OAAAA,GAAA,iBAAAA,GAAAwC,EAAAkC,KAAA1E,EAAA,WAAAyF,EAAAG,QAAA5F,EAAAiG,SAAAlF,KAAA,SAAAf,GAAA8F,EAAA,OAAA9F,EAAA4F,EAAAC,IAAA,SAAAnC,GAAAoC,EAAA,QAAApC,EAAAkC,EAAAC,KAAAJ,EAAAG,QAAA5F,GAAAe,KAAA,SAAAmF,GAAAF,EAAAhG,MAAAkG,EAAAN,EAAAI,IAAA,SAAAlE,GAAA,OAAAgE,EAAA,QAAAhE,EAAA8D,EAAAC,OAAAE,EAAAtB,KAAAqB,CAAAtF,EAAAiE,EAAAmB,EAAAC,KAAA,OAAAH,MAAA3E,KAAA4E,YAAA,SAAArB,EAAAV,EAAAE,EAAAM,GAAA,IAAA+B,EAAA,iCAAA3F,EAAAiE,GAAA,iBAAA0B,EAAA,UAAAC,MAAA,iDAAAD,EAAA,cAAA3F,EAAA,MAAAiE,EAAA,OAAA4B,IAAA,IAAAjC,EAAA5D,SAAA4D,EAAAK,QAAA,KAAA6B,EAAAlC,EAAAkC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAlC,GAAA,GAAAmC,EAAA,IAAAA,IAAA5B,EAAA,gBAAA4B,GAAA,YAAAnC,EAAA5D,OAAA4D,EAAAqC,KAAArC,EAAAsC,MAAAtC,EAAAK,SAAA,aAAAL,EAAA5D,OAAA,uBAAA2F,EAAA,MAAAA,EAAA,YAAA/B,EAAAK,IAAAL,EAAAuC,kBAAAvC,EAAAK,SAAA,WAAAL,EAAA5D,QAAA4D,EAAAwC,OAAA,SAAAxC,EAAAK,KAAA0B,EAAA,gBAAAJ,EAAAxB,EAAAX,EAAAE,EAAAM,GAAA,cAAA2B,EAAAhG,KAAA,IAAAoG,EAAA/B,EAAAyC,KAAA,6BAAAd,EAAAtB,MAAAE,EAAA,gBAAA3E,MAAA+F,EAAAtB,IAAAoC,KAAAzC,EAAAyC,MAAA,UAAAd,EAAAhG,OAAAoG,EAAA,YAAA/B,EAAA5D,OAAA,QAAA4D,EAAAK,IAAAsB,EAAAtB,OAAA,SAAA+B,EAAAF,EAAAlC,GAAA,IAAA5D,EAAA8F,EAAArD,SAAAmB,EAAA5D,QAAA,QAAAsG,IAAAtG,EAAA,IAAA4D,EAAAkC,SAAA,eAAAlC,EAAA5D,OAAA,IAAA8F,EAAArD,SAAA8D,SAAA3C,EAAA5D,OAAA,SAAA4D,EAAAK,SAAAqC,EAAAN,EAAAF,EAAAlC,GAAA,UAAAA,EAAA5D,QAAA,OAAAmE,EAAAP,EAAA5D,OAAA,QAAA4D,EAAAK,IAAA,IAAAuC,UAAA,yDAAArC,EAAA,IAAAoB,EAAAxB,EAAA/D,EAAA8F,EAAArD,SAAAmB,EAAAK,KAAA,aAAAsB,EAAAhG,KAAA,OAAAqE,EAAA5D,OAAA,QAAA4D,EAAAK,IAAAsB,EAAAtB,IAAAL,EAAAkC,SAAA,KAAA3B,EAAA,IAAAsC,EAAAlB,EAAAtB,IAAA,OAAAwC,IAAAJ,MAAAzC,EAAAkC,EAAAY,YAAAD,EAAAjH,MAAAoE,EAAA+C,KAAAb,EAAAc,QAAA,WAAAhD,EAAA5D,SAAA4D,EAAA5D,OAAA,OAAA4D,EAAAK,SAAAqC,GAAA1C,EAAAkC,SAAA,KAAA3B,GAAAsC,GAAA7C,EAAA5D,OAAA,QAAA4D,EAAAK,IAAA,IAAAuC,UAAA,oCAAA5C,EAAAkC,SAAA,KAAA3B,GAAA,SAAA0C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAAvC,KAAA6C,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAAxB,EAAAwB,EAAAQ,YAAA,GAAAhC,EAAAhG,KAAA,gBAAAgG,EAAAtB,IAAA8C,EAAAQ,WAAAhC,EAAA,SAAA1B,EAAAN,GAAAgB,KAAA6C,WAAA,EAAAJ,OAAA,SAAAzD,EAAAuB,QAAA+B,EAAAtC,WAAAiD,OAAA,YAAA7C,EAAA8C,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAjF,GAAA,GAAAkF,EAAA,OAAAA,EAAAxD,KAAAuD,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAG,QAAA,KAAAC,GAAA,EAAAlB,EAAA,SAAAA,IAAA,OAAAkB,EAAAJ,EAAAG,QAAA,GAAA5F,EAAAkC,KAAAuD,EAAAI,GAAA,OAAAlB,EAAAnH,MAAAiI,EAAAI,GAAAlB,EAAAN,MAAA,EAAAM,EAAA,OAAAA,EAAAnH,WAAA8G,EAAAK,EAAAN,MAAA,EAAAM,GAAA,OAAAA,UAAA,OAAAA,KAAAd,GAAA,SAAAA,IAAA,OAAArG,WAAA8G,EAAAD,MAAA,UAAAjC,EAAArC,UAAAsC,EAAAnC,EAAA0C,EAAA,eAAApF,MAAA6E,EAAArB,cAAA,IAAAd,EAAAmC,EAAA,eAAA7E,MAAA4E,EAAApB,cAAA,IAAAoB,EAAA0D,YAAAhF,EAAAuB,EAAAzB,EAAA,qBAAAf,EAAAkG,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAA7D,GAAA,uBAAA6D,EAAAH,aAAAG,EAAA3I,QAAAuC,EAAAsG,KAAA,SAAAH,GAAA,OAAAvJ,OAAA2J,eAAA3J,OAAA2J,eAAAJ,EAAA3D,IAAA2D,EAAAK,UAAAhE,EAAAvB,EAAAkF,EAAApF,EAAA,sBAAAoF,EAAAjG,UAAAtD,OAAAkF,OAAAiB,GAAAoD,GAAAnG,EAAAyG,MAAA,SAAArE,GAAA,OAAAwB,QAAAxB,IAAAY,EAAAG,EAAAjD,WAAAe,EAAAkC,EAAAjD,UAAAW,EAAA,kBAAA6B,OAAA1C,EAAAmD,gBAAAnD,EAAA0G,MAAA,SAAAnF,EAAAC,EAAAC,EAAAC,EAAA0B,QAAA,IAAAA,MAAAuD,SAAA,IAAAC,EAAA,IAAAzD,EAAA7B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA0B,GAAA,OAAApD,EAAAkG,oBAAA1E,GAAAoF,IAAA9B,OAAApG,KAAA,SAAAiF,GAAA,OAAAA,EAAAa,KAAAb,EAAAhG,MAAAiJ,EAAA9B,UAAA9B,EAAAD,GAAA9B,EAAA8B,EAAAhC,EAAA,aAAAE,EAAA8B,EAAApC,EAAA,kBAAA+B,OAAAzB,EAAA8B,EAAA,mDAAA/C,EAAA6G,KAAA,SAAAC,GAAA,IAAAC,EAAAnK,OAAAkK,GAAAD,EAAA,WAAAtG,KAAAwG,EAAAF,EAAArB,KAAAjF,GAAA,OAAAsG,EAAAG,UAAA,SAAAlC,IAAA,KAAA+B,EAAAd,QAAA,KAAAxF,EAAAsG,EAAAI,MAAA,GAAA1G,KAAAwG,EAAA,OAAAjC,EAAAnH,MAAA4C,EAAAuE,EAAAN,MAAA,EAAAM,EAAA,OAAAA,EAAAN,MAAA,EAAAM,IAAA9E,EAAA8C,SAAAd,EAAA9B,UAAA,CAAAmG,YAAArE,EAAA2D,MAAA,SAAAuB,GAAA,GAAAxE,KAAAyE,KAAA,EAAAzE,KAAAoC,KAAA,EAAApC,KAAA0B,KAAA1B,KAAA2B,WAAAI,EAAA/B,KAAA8B,MAAA,EAAA9B,KAAAuB,SAAA,KAAAvB,KAAAvE,OAAA,OAAAuE,KAAAN,SAAAqC,EAAA/B,KAAA6C,WAAAtC,QAAAwC,IAAAyB,EAAA,QAAAzJ,KAAAiF,KAAA,MAAAjF,EAAA2J,OAAA,IAAAjH,EAAAkC,KAAAK,KAAAjF,KAAAqI,OAAArI,EAAA4J,MAAA,MAAA3E,KAAAjF,QAAAgH,IAAA6C,KAAA,WAAA5E,KAAA8B,MAAA,MAAA+C,EAAA7E,KAAA6C,WAAA,GAAAG,WAAA,aAAA6B,EAAA7J,KAAA,MAAA6J,EAAAnF,IAAA,OAAAM,KAAA8E,MAAAlD,kBAAA,SAAAmD,GAAA,GAAA/E,KAAA8B,KAAA,MAAAiD,EAAA,IAAA1F,EAAAW,KAAA,SAAAgF,EAAAC,EAAAC,GAAA,OAAAlE,EAAAhG,KAAA,QAAAgG,EAAAtB,IAAAqF,EAAA1F,EAAA+C,KAAA6C,EAAAC,IAAA7F,EAAA5D,OAAA,OAAA4D,EAAAK,SAAAqC,KAAAmD,EAAA,QAAA5B,EAAAtD,KAAA6C,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAAxC,KAAA6C,WAAAS,GAAAtC,EAAAwB,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAuC,EAAA,UAAAxC,EAAAC,QAAAzC,KAAAyE,KAAA,KAAAU,EAAA1H,EAAAkC,KAAA6C,EAAA,YAAA4C,EAAA3H,EAAAkC,KAAA6C,EAAA,iBAAA2C,GAAAC,EAAA,IAAApF,KAAAyE,KAAAjC,EAAAE,SAAA,OAAAsC,EAAAxC,EAAAE,UAAA,MAAA1C,KAAAyE,KAAAjC,EAAAG,WAAA,OAAAqC,EAAAxC,EAAAG,iBAAA,GAAAwC,GAAA,GAAAnF,KAAAyE,KAAAjC,EAAAE,SAAA,OAAAsC,EAAAxC,EAAAE,UAAA,YAAA0C,EAAA,UAAA/D,MAAA,6CAAArB,KAAAyE,KAAAjC,EAAAG,WAAA,OAAAqC,EAAAxC,EAAAG,gBAAAd,OAAA,SAAA7G,EAAA0E,GAAA,QAAA4D,EAAAtD,KAAA6C,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAAxC,KAAA6C,WAAAS,GAAA,GAAAd,EAAAC,QAAAzC,KAAAyE,MAAAhH,EAAAkC,KAAA6C,EAAA,eAAAxC,KAAAyE,KAAAjC,EAAAG,WAAA,KAAA0C,EAAA7C,EAAA,OAAA6C,IAAA,UAAArK,GAAA,aAAAA,IAAAqK,EAAA5C,QAAA/C,MAAA2F,EAAA1C,aAAA0C,EAAA,UAAArE,EAAAqE,IAAArC,WAAA,UAAAhC,EAAAhG,OAAAgG,EAAAtB,MAAA2F,GAAArF,KAAAvE,OAAA,OAAAuE,KAAAoC,KAAAiD,EAAA1C,WAAA/C,GAAAI,KAAAsF,SAAAtE,IAAAsE,SAAA,SAAAtE,EAAA4B,GAAA,aAAA5B,EAAAhG,KAAA,MAAAgG,EAAAtB,IAAA,gBAAAsB,EAAAhG,MAAA,aAAAgG,EAAAhG,KAAAgF,KAAAoC,KAAApB,EAAAtB,IAAA,WAAAsB,EAAAhG,MAAAgF,KAAA8E,KAAA9E,KAAAN,IAAAsB,EAAAtB,IAAAM,KAAAvE,OAAA,SAAAuE,KAAAoC,KAAA,kBAAApB,EAAAhG,MAAA4H,IAAA5C,KAAAoC,KAAAQ,GAAAhD,GAAA2F,OAAA,SAAA5C,GAAA,QAAAW,EAAAtD,KAAA6C,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAAxC,KAAA6C,WAAAS,GAAA,GAAAd,EAAAG,eAAA,OAAA3C,KAAAsF,SAAA9C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAA5C,IAAA9C,MAAA,SAAA2F,GAAA,QAAAa,EAAAtD,KAAA6C,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAAxC,KAAA6C,WAAAS,GAAA,GAAAd,EAAAC,WAAA,KAAAzB,EAAAwB,EAAAQ,WAAA,aAAAhC,EAAAhG,KAAA,KAAAwK,EAAAxE,EAAAtB,IAAAqD,EAAAP,GAAA,OAAAgD,GAAA,UAAAnE,MAAA,0BAAAoE,cAAA,SAAAvC,EAAAf,EAAAE,GAAA,OAAArC,KAAAuB,SAAA,CAAArD,SAAAkC,EAAA8C,GAAAf,aAAAE,WAAA,SAAArC,KAAAvE,SAAAuE,KAAAN,SAAAqC,GAAAnC,IAAAtC,EAEA,IAqHeoI,EArHI,SAAoB5L,GAAO,IAAAC,EAClBC,mBAAS,IAAGC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAA/B4L,EAAK1L,EAAA,GAAE2L,EAAQ3L,EAAA,GAAAK,EACQN,mBAAS,IAAGO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAAnCuL,EAAOtL,EAAA,GAAEuL,EAAUvL,EAAA,GAwE1B,OAtEAwL,oBAAU,WACR,IAAMC,EAAa5J,SAASC,eAAe,cACrC4J,EAAiB7J,SAASC,eAAe,kBAExCvC,EAAM0C,QACTwJ,EAAW1J,UAAY,iBACvB2J,EAAe3J,UAAY,IAE7Bf,MAAMC,kDAAiD,CACrDC,OAAQ,MACRC,KAAM,OACNC,QAAS,CACPC,eAAgB,mBAChBsK,cAAe,UAAYpM,EAAM0C,SAGlCR,KAAK,SAACC,GAAQ,OAAKA,EAASC,SAC5BF,KAAK,SAACmB,GACL6I,EAAW1J,UAAY,GACvBa,EAAKoD,QAAQ,SAAC4F,GACZH,EAAWI,YC3BhB,SAAsBC,EAAUC,GACrC,IAAMC,EAASnK,SAASxB,cAAc,MACtC2L,EAAO1I,IAAMwI,EACb,IAAMG,EAAMpK,SAASxB,cAAc,OACnC4L,EAAIC,IAAM,8CACVD,EAAIE,IAAM,cACVF,EAAIG,MAAMC,OAAS,EACnB,IAAMC,EAAOzK,SAASxB,cAAc,KACpCiM,EAAKhK,KAAO,WAAawJ,EACzBQ,EAAKC,UAAY,oCACjB,IAAMnB,EAAQvJ,SAASxB,cAAc,KAMrC,OALA+K,EAAMrJ,UAAYgK,EAElBO,EAAKT,YAAYI,GACjBK,EAAKT,YAAYT,GACjBY,EAAOH,YAAYS,GACZN,EDW0BQ,CAAaZ,EAAQa,IAAKb,EAAQR,YAG5D7I,MAAM,SAACC,GACN,MAAO,QAAUA,KAItB,CAACjD,EAAM0C,QA2CR9B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAAA,MAAIqC,GAAG,cACLvC,EAAAC,EAAAC,cAAA,8CAGJF,EAAAC,EAAAC,cAAA,QACEqC,GAAG,iBACHpC,UAAU,0DACVoM,SAAU,SAACC,GAAC,OAlDlB,SAAuBA,GAErB,GADAA,EAAEC,kBACGrN,EAAM0C,MACT,MAAO,iBAETjB,MAAMC,kDAAiD,CACrDC,OAAQ,OACRC,KAAM,OACNC,QAAS,CACPC,eAAgB,mBAChBsK,cAAe,UAAYpM,EAAM0C,OAEnCX,KAAMC,KAAKC,UAAU,CACnB4J,MAAOA,MAGR3J,KAAK,SAACC,GAAQ,OAAKA,EAASC,SAC5BF,KAAI,eAAAoL,EAAAlN,OAAAmN,EAAA,EAAAnN,CAAAmD,IAAAuG,KAAC,SAAA0D,EAAOjB,GAAQ,OAAAhJ,IAAAuB,KAAA,SAAA2I,GAAA,cAAAA,EAAA9C,KAAA8C,EAAAnF,MAAA,OACnBzF,OAAOC,SAASC,KAAI,WAAA2K,OAAcnB,GAClC9K,MAAMC,mDAAmD6K,EAAU,CACjE5K,OAAQ,OACRC,KAAM,OACNC,QAAS,CACPC,eAAgB,mBAChBsK,cAAe,UAAYpM,EAAM0C,OAEnCX,KAAMC,KAAKC,UAAU,CACnB8J,QAASA,MAEV,wBAAA0B,EAAA3C,SAAA0C,MACJ,gBAAAG,GAAA,OAAAL,EAAAM,MAAA1H,KAAA2H,YAbI,IAcJ3L,KAAK,SAACC,GAAQ,OAAKA,EAASC,SAC5BF,KAAK,SAACmB,GACLH,QAAQI,IAAI,sBAAuBD,KAEpCL,MAAM,SAACC,GACNC,QAAQD,MAAM,SAAUA,KAcP6K,CAAcV,KAE/BxM,EAAAC,EAAAC,cAAA,SAAOC,UAAU,aAAW,qBAC5BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,SAAO,mBACtBJ,EAAAC,EAAAC,cAAA,SACEG,KAAK,QACLE,MAAO0K,EACPzK,SAAU,SAACgM,GAAC,OAAKtB,EAASsB,EAAE9L,OAAOH,WAGvCP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,WAAS,uBACxBJ,EAAAC,EAAAC,cAAA,YACEG,KAAK,UACLE,MAAO4K,EACP3K,SAAU,SAACgM,GAAC,OAAKpB,EAAWoB,EAAE9L,OAAOH,QACrCJ,UAAU,iBAGdH,EAAAC,EAAAC,cAAA,UAAQI,KAAK,UACXN,EAAAC,EAAAC,cAAA,OACE6L,IAAI,uCACJC,IAAI,UACJE,OAAO,MACF,aEnDFiB,EA1DK,SAAqB/N,GAAO,IACxCmD,EAAO6K,cAAP7K,GAAElD,EACsBC,mBAAS,IAAGC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAnC8L,EAAO5L,EAAA,GAAE6L,EAAU7L,EAAA,GA4B1B,OACES,EAAAC,EAAAC,cAAA,QACEC,UAAU,0DACVoM,SAAU,SAACC,GAAC,OA7BhB,SAAqBA,GAEnB,GADAA,EAAEC,kBACGrN,EAAM0C,MACT,MAAO,iBAETjB,MAAMC,mDAAmDyB,EAAI,CAC3DxB,OAAQ,OACRC,KAAM,OACNC,QAAS,CACPC,eAAgB,mBAChBsK,cAAe,UAAYpM,EAAM0C,OAEnCX,KAAMC,KAAKC,UAAU,CACnB8J,QAASA,MAGV7J,KAAK,SAACC,GAAQ,OAAKA,EAASC,SAC5BF,KAAK,SAACmB,GACLH,QAAQI,IAAI,WAAYD,GACxBR,OAAOC,SAASmL,WAEjBjL,MAAM,SAACC,GACNC,QAAQD,MAAM,SAAUA,KAOTiL,CAAYd,KAE7BxM,EAAAC,EAAAC,cAAA,SAAOC,UAAU,YAAYC,QAAQ,WAClC,IAAG,oBACc,KAEpBJ,EAAAC,EAAAC,cAAA,YACEG,KAAK,UACLE,MAAO4K,EACP3K,SAAU,SAACgM,GAAC,OAAKpB,EAAWoB,EAAE9L,OAAOH,QACrCJ,UAAU,0BAEZH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQI,KAAK,UACXN,EAAAC,EAAAC,cAAA,OACE6L,IAAI,uCACJC,IAAI,UACJE,OAAO,MACF,YCkBAqB,EArES,SAAyBnO,GAC/C,IAAIoO,EAAmBC,cAAcC,SAASC,EACzBC,cAAhBC,EAAiCrO,OAAAC,EAAA,EAAAD,CAAAmO,EAAA,GAArB,GAEbG,EAAY,EACXpF,MAAMqF,SAASF,EAAaG,IAAI,aACnCF,EAAYC,SAASF,EAAaG,IAAI,WAGxC,IAAIC,EAAaC,KAAKC,MAAM/O,EAAMgP,YAAc,IAAM,EAClDC,EAAcH,KAAKC,MAAML,EAAY,IAAM,EAE/C,SAASQ,EAAaC,GACpB,GAAIA,IAAWF,EACb,OACErO,EAAAC,EAAAC,cAAA,QAAMiD,IAAKoL,EAAQpO,UAAU,0BAC1B,IACAoO,EAAQ,KAIb,IAAIpC,EAAOqB,EAAgB,UAAAV,OAA4B,IAAdyB,EAAS,IAClD,OACEvO,EAAAC,EAAAC,cAAA,QAAMiD,IAAKoL,EAAQpO,UAAU,0BAC3BH,EAAAC,EAAAC,cAAA,KAAGiC,KAAMgK,GAAOoC,IAgCxB,OACEvO,EAAAC,EAAAC,cAAA,OACEqC,GAAG,YACHpC,UAAU,uDAEVH,EAAAC,EAAAC,cAAA,YACGd,EAAMgP,YAAW,sBAAgBC,EAAW,OAAMJ,EAAU,WAhCnE,WACE,IAAIO,EAAW,GACf,SAASC,IACP,OAAOzO,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAgB,SAoBtC,OAhBIkO,EAAc,GAAK,IACD,IAAhBA,GACFG,EAASpG,KAAKqG,KAEhBD,EAASpG,KAAKkG,EAAaD,EAAc,KAE3CG,EAASpG,KAAKkG,EAAaD,IACvBA,EAAc,GAAKJ,GACrBO,EAASpG,KAAKkG,EAAaD,EAAc,IAEvCA,EAAc,EAAIJ,IAChBI,EAAc,IAAMJ,GACtBO,EAASpG,KAAKqG,KAEhBD,EAASpG,KAAKkG,EAAaL,KAEtBO,EAWJE,KCmKQC,EAjOG,SAAmBvP,GAAO,IACpCmD,EAAO6K,cAAP7K,GAAEoL,EAC8BC,cAAiBgB,EAAApP,OAAAC,EAAA,EAAAD,CAAAmO,EAAA,GAAlDE,EAAYe,EAAA,GAAEC,EAAeD,EAAA,GAAAvP,EACRC,mBAAS,WAAUC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAxCyP,EAAMvP,EAAA,GAAEwP,EAASxP,EAAA,GAkNtB,OAhNA8L,oBAAU,WACR,IAAM2D,EAAWtN,SAASC,eAAe,YAEzC,SAASsN,EAAWrD,EAAalM,EAAUwP,EAAaC,EAAMhM,GAC5D,IAAM0I,EAASnK,SAASxB,cAAc,MACtC2L,EAAOO,UAAY,sDACnBP,EAAO1I,IAAMA,EAEb,IAAMiM,EAAO1N,SAASxB,cAAc,OACpCkP,EAAKhD,UAAY,cAEjB,IAAMiD,EAAO3N,SAASxB,cAAc,OACpCmP,EAAKjD,UAAY,cACjBiD,EAAKpD,MAAMqD,WAAa,kBAExB,IAAMrE,EAAQvJ,SAASxB,cAAc,KACrC+K,EAAMrJ,UAAYgK,EAClBX,EAAM9I,KAAO,IAEb,IAAMoN,EAAY7N,SAASxB,cAAc,KACzCqP,EAAUnD,UAAY,YACtBmD,EAAU3N,UAAS,MAAAkL,OAASpN,EAAQ,QAAAoN,OAAO,IAAI0C,KAAKL,IAEpD,IAAMhE,EAAUzJ,SAASxB,cAAc,KACvCiL,EAAQiB,UAAY,YACpBjB,EAAQvJ,UAAYsN,EAEpB,IAAMO,EAAY/N,SAASxB,cAAc,KACzCuP,EAAUrD,UAAY,6BACtBqD,EAAU7N,UAAS,GAAAkL,OAAMpN,GAEzB0P,EAAK1D,YAAYT,GACjBmE,EAAK1D,YAAY6D,GACjBH,EAAK1D,YAAYP,GACjBkE,EAAK3D,YAAY+D,GAEjB,IAAMC,EAAkBhO,SAASxB,cAAc,QAe/C,OAdAwP,EAAgBtD,UAAY,oBAExB1M,IAAaN,EAAMM,UACrBgQ,EAAgBhE,YA0CpB,SAAkBiE,EAAQT,GACxB,IAAMU,EAAgBlO,SAASxB,cAAc,OAC7C0P,EAAc3D,MAAM4D,QAAU,OAC9BD,EAAcxD,UAAY,aAE1B,IAAM0D,EAAUpO,SAASxB,cAAc,YACvC4P,EAAQ3P,UAAY,cACpB2P,EAAQvP,MAAQ2O,EAEhB,IAAMa,EAAarO,SAASxB,cAAc,UAC1C6P,EAAWnO,UAAY,OACvBmO,EAAWC,iBAAiB,QAAS,WACnCnP,MAAMC,0CAAkC,YAAAgM,OAAe6C,EAAM,SAAS,CACpE5O,OAAQ,OACRC,KAAM,OACNC,QAAS,CACPC,eAAgB,mBAChBsK,cAAe,UAAYpM,EAAM0C,OAEnCX,KAAMC,KAAKC,UAAU,CACnB8J,QAAS2E,EAAQvP,UAGlBe,KAAK,SAACC,GAAQ,OAAKA,EAASC,SAC5BF,KAAK,SAACmB,GACLH,QAAQI,IAAID,GACZR,OAAOC,SAASmL,WAEjBjL,MAAM,SAACC,GACN,MAAO,QAAUA,MAIvBuN,EAAclE,YAAYoE,GAC1BF,EAAclE,YAAYqE,GAE1B,IAAM5D,EAAOzK,SAASxB,cAAc,KACpCiM,EAAKC,UAAY,qBACjBD,EAAKvK,UAAY,OACjBuK,EAAK6D,iBAAiB,QAAS,WACO,SAAhCJ,EAAc3D,MAAM4D,QACtBD,EAAc3D,MAAM4D,QAAU,OAE9BD,EAAc3D,MAAM4D,QAAU,SAIlC,IAAMI,EAAavO,SAASxB,cAAc,OAI1C,OAHA+P,EAAWvE,YAAYS,GACvB8D,EAAWvE,YAAYkE,GAEhBK,EA7FuBC,CAAS/M,EAAK+L,IAErB,kBAAnB9P,EAAM+Q,UAAmD,UAAnB/Q,EAAM+Q,UAC9CT,EAAgBhE,YAWpB,SAAoBiE,GAClB,IAAMxD,EAAOzK,SAASxB,cAAc,KAwBpC,OAvBAiM,EAAKC,UAAY,oCACjBD,EAAKvK,UAAY,SACjBuK,EAAK6D,iBAAiB,QAAS,WAC7BnP,MACEC,0CAAkC,YAAAgM,OAAe6C,EAAM,WACvD,CACE5O,OAAQ,OACRC,KAAM,OACNC,QAAS,CACPC,eAAgB,mBAChBsK,cAAe,UAAYpM,EAAM0C,SAIpCR,KAAK,SAACC,GAAQ,OAAKA,EAASC,SAC5BF,KAAK,SAACmB,GACLH,QAAQI,IAAID,GACZR,OAAOC,SAASmL,WAEjBjL,MAAM,SAACC,GACN,MAAO,QAAUA,MAGhB8J,EApCuBiE,CAAWjN,IAEP,KAA9BuM,EAAgB9N,WAClBwN,EAAK1D,YAAYgE,GAGnB7D,EAAOH,YAAY0D,GACnBvD,EAAOH,YAAY2D,GACZxD,EAoIPhL,MAAMC,0CAAkC,YAAAgM,OAAevK,EAAE,UAAU,CACjExB,OAAQ,MACRC,KAAM,OACNC,QAAS,CACPC,eAAgB,mBAChBsK,cAAe,UAAYpM,EAAM0C,SAGlCR,KAAK,SAACC,GAAQ,OAAKA,EAASC,SAC5BF,KAAK,SAACmB,GACLsM,EAAUtM,KAzDhB,WACOrD,EAAM0C,QACTkN,EAASpN,UAAY,kBAEvB,IAAIkM,EAAY,EACXpF,MAAMqF,SAASF,EAAaG,IAAI,aACnCF,EAAYC,SAASF,EAAaG,IAAI,WAExCnN,MACEC,0CAAkC,YAAAgM,OACpBvK,EAAE,WAAAuK,OAAUgB,GAC1B,CACE/M,OAAQ,MACRC,KAAM,OACNC,QAAS,CACPC,eAAgB,mBAChBsK,cAAe,UAAYpM,EAAM0C,SAIpCR,KAAK,SAACC,GAAQ,OAAKA,EAASC,SAC5BF,KAAK,SAACmB,GACL,GAAoB,IAAhBA,EAAKkG,OAAc,CACrB,IAAM0H,EAAU3O,SAASxB,cAAc,KACvCmQ,EAAQzO,UAAY,4CACpBoN,EAASpN,UAAY,GACrBoN,EAAStD,YAAY2E,QAErBrB,EAASpN,UAAY,GACrBa,EAAKoD,QAAQ,SAAC4F,GACZ,IAAM6E,EAAUrB,EACdxD,EAAQ8E,OAAOtF,MACfQ,EAAQ+E,OAAO9Q,SACf+L,EAAQN,QACRM,EAAQ0D,KACR1D,EAAQa,KAEV0C,EAAStD,YAAY4E,OAI1BlO,MAAM,SAACC,GACN,MAAO,QAAUA,IAoBvBoO,IACC,CACDrR,EAAM0C,MACN1C,EAAM+Q,SACN/Q,EAAMM,SACN6C,EACAsL,EACAgB,IAIA7O,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwQ,EAAe,CAACtC,YAAaU,IAC9B9O,EAAAC,EAAAC,cAAA,MAAIqC,GAAG,YACLvC,EAAAC,EAAAC,cAAA,qCAEFF,EAAAC,EAAAC,cAACwQ,EAAe,CAACtC,YAAaU,IAC9B9O,EAAAC,EAAAC,cAACyQ,EAAW,CAAC7O,MAAO1C,EAAM0C,UCxFjB8O,EAvIG,SAAmBxR,GAwGnC,OAvGAiM,oBAAU,WAwDR,IAAMwF,EAAUnP,SAASC,eAAe,UAClCmP,EAAYpP,SAASC,eAAe,aACpCoP,EAAYrP,SAASC,eAAe,aACpCqP,EAAWtP,SAASC,eAAe,YAElCvC,EAAM0C,QACT+O,EAAQjP,UAAY,kBAEtBf,MAAMC,+CAA8C,CAClDC,OAAQ,MACRC,KAAM,OACNC,QAAS,CACPC,eAAgB,mBAChBsK,cAAe,UAAYpM,EAAM0C,SAGlCR,KAAK,SAACC,GAAQ,OAAKA,EAASC,SAC5BF,KAAK,SAACmB,GACLH,QAAQI,IAAID,GACZA,EAAKoD,QAAQ,SAAC4F,GACZ,IAAMwF,EA3Ed,SAAoBC,EAAQC,EAAUhB,GACpC,IAAMtE,EAASnK,SAASxB,cAAc,MACtC2L,EAAOjK,UAAYuP,EACnB,IAAMC,EAAmB1P,SAASxB,cAAc,UAkDhD,MAjDiB,SAAbiQ,GACFiB,EAAiBxP,UAAY,aAC7BwP,EAAiBpB,iBAAiB,QAAS,WACzCnP,MACEC,0CAAkC,eAAAgM,OAAkBoE,EAAM,SAC1D,CACEnQ,OAAQ,OACRC,KAAM,OACNC,QAAS,CACPC,eAAgB,mBAChBsK,cAAe,UAAYpM,EAAM0C,SAIpCR,KAAK,SAACC,GAAQ,OAAKA,EAASC,SAC5BF,KAAK,SAACmB,GACLH,QAAQI,IAAID,GACZR,OAAOC,SAASmL,WAEjBjL,MAAM,SAACC,GACN,MAAO,QAAUA,MAGvBwJ,EAAOH,YAAY0F,IACG,kBAAbjB,IACTiB,EAAiBxP,UAAY,eAC7BwP,EAAiBpB,iBAAiB,QAAS,WACzCnP,MACEC,0CAAkC,eAAAgM,OAAkBoE,EAAM,WAC1D,CACEnQ,OAAQ,OACRC,KAAM,OACNC,QAAS,CACPC,eAAgB,mBAChBsK,cAAe,UAAYpM,EAAM0C,SAIpCR,KAAK,SAACC,GAAQ,OAAKA,EAASC,SAC5BF,KAAK,SAACmB,GACLH,QAAQI,IAAID,GACZR,OAAOC,SAASmL,WAEjBjL,MAAM,SAACC,GACN,MAAO,QAAUA,MAGvBwJ,EAAOH,YAAY0F,IAEdvF,EAsBewF,CACd5F,EAAQa,IACRb,EAAQ/L,SACR+L,EAAQnL,MAEV,OAAQmL,EAAQnL,MACd,IAAK,OACH0Q,EAAStF,YAAYuF,GACrB,MACF,IAAK,gBACHF,EAAUrF,YAAYuF,GACtB,MACF,IAAK,QACHH,EAAUpF,YAAYuF,GACtB,MACF,QACE,MAAM,IAAItK,MAAM,4BAA8B8E,EAAQnL,WAI7D8B,MAAM,SAACC,GACN,MAAO,QAAUA,KAItB,CAACjD,EAAM0C,QAGR9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACbH,EAAAC,EAAAC,cAAA,OAAKqC,GAAG,UACNvC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,qEACAF,EAAAC,EAAAC,cAAA,sDACAF,EAAAC,EAAAC,cAAA,qEACAF,EAAAC,EAAAC,cAAA,SACG,IAAG,qGAE+B,OAIzCF,EAAAC,EAAAC,cAAA,OAAKqC,GAAG,QAAQpC,UAAU,aAAW,SAEnCH,EAAAC,EAAAC,cAAA,MAAIqC,GAAG,eAETvC,EAAAC,EAAAC,cAAA,OAAKqC,GAAG,QAAQpC,UAAU,aAAW,iBAEnCH,EAAAC,EAAAC,cAAA,MAAIqC,GAAG,eAETvC,EAAAC,EAAAC,cAAA,OAAKqC,GAAG,OAAOpC,UAAU,aAAW,QAElCH,EAAAC,EAAAC,cAAA,MAAIqC,GAAG,gBCtHTtD,2BAAU,IAAIC,KAsILoS,MApIf,WAAe,IAAAjS,EACmBC,mBAASL,EAAQ+O,IAAI,UAASzO,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAvDkS,EAAQhS,EAAA,GAAEiS,EAAWjS,EAAA,GAAAK,EACIN,mBAAS,IAAGO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAArCF,EAAQG,EAAA,GAAEF,EAAWE,EAAA,GAAA4R,EACInS,mBAAS,IAAGoS,EAAAlS,OAAAC,EAAA,EAAAD,CAAAiS,EAAA,GAArCtB,EAAQuB,EAAA,GAAEC,EAAWD,EAAA,GA0B5B,SAASE,IACP3S,EAAQ4S,OAAO,SACflS,EAAY,IACZgS,EAAY,IACZ1P,OAAOC,SAASmL,SAuElB,OAnGAhC,oBAAU,WAENxK,MAAMC,uDAAsD,CAC1DC,OAAQ,MACRC,KAAM,OACNC,QAAS,CACPC,eAAgB,mBAChBsK,cAAe,UAAY+F,KAG5BjQ,KAAK,SAACC,GAAQ,OAAKA,EAASC,SAC5BF,KAAK,SAACmB,GACQ,mBAATA,IACF9C,EAAY8C,EAAK/C,UACjBiS,EAAYlP,EAAKnC,SAGpB8B,MAAM,SAACC,GACN,MAAO,QAAUA,MAkFvBrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sDACbH,EAAAC,EAAAC,cAAC4R,EAAA,EAAa,KArEC,KAAbpS,EAEAM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4DACbH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC4R,EAAA,EAAI,CAACC,GAAG,KAAG,gBAEd/R,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OACE6L,IAAI,sCACJC,IAAI,SACJE,OAAO,MAETlM,EAAAC,EAAAC,cAAC4R,EAAA,EAAI,CAACC,GAAG,WAAS,eAEpB/R,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OACE6L,IAAI,8CACJC,IAAI,iBACJE,OAAO,MAETlM,EAAAC,EAAAC,cAAC4R,EAAA,EAAI,CAACC,GAAG,UAAQ,aAID,SAAb5B,EAEPnQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4DACbH,EAAAC,EAAAC,cAAC4R,EAAA,EAAI,CAACC,GAAG,KAAG,eACZ/R,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACfH,EAAAC,EAAAC,cAAA,2BAAmBR,EAAQ,KAC3BM,EAAAC,EAAAC,cAAA,OACE6L,IAAI,8CACJC,IAAI,iBACJE,OAAO,IACP/L,UAAU,eAEZH,EAAAC,EAAAC,cAAA,KAAGU,QAAS,kBAAMgR,KAAUzR,UAAU,YACnC,IAAG,SACG,MAMXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4DACbH,EAAAC,EAAAC,cAAC4R,EAAA,EAAI,CAACC,GAAG,KAAG,eACZ/R,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACfH,EAAAC,EAAAC,cAAC4R,EAAA,EAAI,CAACC,GAAG,UAAQ,kBACjB/R,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,2BAAmBR,EAAQ,MAE7BM,EAAAC,EAAAC,cAAA,OACE6L,IAAI,8CACJC,IAAI,iBACJE,OAAO,IACP/L,UAAU,eAEZH,EAAAC,EAAAC,cAAA,KAAGU,QAAS,kBAAMgR,KAAUzR,UAAU,YACnC,IAAG,SACG,MAWXH,EAAAC,EAAAC,cAAC8R,EAAA,EAAM,KACLhS,EAAAC,EAAAC,cAAC8R,EAAA,EAAK,CACJhQ,KAAK,SACLyJ,QAASzL,EAAAC,EAAAC,cAAC+R,EAAS,CAACpQ,cAAe2P,MAErCxR,EAAAC,EAAAC,cAAC8R,EAAA,EAAK,CAAChQ,KAAK,UAAUyJ,QAASzL,EAAAC,EAAAC,cAACgS,EAAU,QAC1ClS,EAAAC,EAAAC,cAAC8R,EAAA,EAAK,CAAChQ,KAAK,SAASyJ,QAASzL,EAAAC,EAAAC,cAACiS,EAAS,CAACrQ,MAAOyP,MAChDvR,EAAAC,EAAAC,cAAC8R,EAAA,EAAK,CACJhQ,KAAK,cACLyJ,QACEzL,EAAAC,EAAAC,cAACkS,EAAS,CACRtQ,MAAOyP,EACP7R,SAAUA,EACVyQ,SAAUA,MAIhBnQ,EAAAC,EAAAC,cAAC8R,EAAA,EAAK,CAAChQ,KAAK,IAAIyJ,QAASzL,EAAAC,EAAAC,cAACmS,EAAU,CAACvQ,MAAOyP,UCxItDe,IAASC,OACPvS,EAAAC,EAAAC,cAACF,EAAAC,EAAMuS,WAAU,KACfxS,EAAAC,EAAAC,cAACuS,EAAG,OAEN/Q,SAASC,eAAe","file":"static/js/main.f05d44d7.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nimport Cookies from \"universal-cookie\";\nconst cookies = new Cookies();\n\nconst LoginForm = function LoginForm(props) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  function submitForm() {\n    fetch(process.env.REACT_APP_API_LOCATION + \"/user/login\", {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username: username,\n        password: password,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        const infoArea = document.getElementById(\"infoArea\");\n        if (response === \"Incorrect username.\") {\n          infoArea.innerHTML = \"Incorrect username\";\n        } else if (response === \"Incorrect password.\")\n          infoArea.innerHTML = \"Incorrect password.\";\n        else if (response === \"Database error.\") {\n          infoArea.innerHTML =\n            \"Database error, please contact an administrator.\";\n        } else {\n          props.onChangeToken(response.token);\n          cookies.set(\"token\", response.token, { path: \"/\" });\n          window.location.href = \"../\";\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n  }\n\n  return (\n    <div className=\"topMargin orange\">\n      <div className=\"centerSquare\">\n        <form>\n          <div className=\"flexColumn\">\n            <h2> Login </h2>\n            <label className=\"topMargin\" htmlFor=\"username\">\n              Username\n            </label>\n            <input\n              className=\"topMargin\"\n              name=\"username\"\n              type=\"text\"\n              value={username}\n              onChange={(event) => setUsername(event.target.value)}\n              required\n            />\n            <label className=\"topMargin\" htmlFor=\"password\">\n              Password\n            </label>\n            <input\n              className=\"topMargin\"\n              name=\"password\"\n              type=\"password\"\n              value={password}\n              onChange={(event) => setPassword(event.target.value)}\n              required\n            />\n          </div>\n        </form>\n        <button className=\"topMargin\" onClick={() => submitForm()}>\n          Submit\n        </button>\n        <div id=\"infoArea\" className=\"topMargin\"></div>\n        <div className=\"topMargin\">\n          <p>\n            To test out accounts with different authorization levels, login with\n            the following.\n          </p>\n          <p>\n            Username and password are identical (e.g. to login as a user, put in\n            \"user\" as the username and \"user\" as the password)\n          </p>\n          <p> Normal user: user </p>\n          <p> Admin: administrator </p>\n          <p> Owner: owner </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import React, { useState } from \"react\";\n\nconst SignupForm = function SignupForm() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  function submitForm() {\n    fetch(process.env.REACT_APP_API_LOCATION + \"/user/signup\", {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username: username,\n        password: password,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"Success:\", data);\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n  }\n\n  return (\n    <div className=\"topMargin orange\">\n      <div className=\"centerSquare\">\n        <form>\n          <div className=\"flexColumn\">\n            <h2> Signup </h2>\n            <label className=\"topMargin\" htmlFor=\"username\">\n              Username\n            </label>\n            <input\n              className=\"topMargin\"\n              name=\"username\"\n              type=\"text\"\n              value={username}\n              onChange={(event) => setUsername(event.target.value)}\n              required\n            />\n            <label className=\"topMargin\" htmlFor=\"password\">\n              Password\n            </label>\n            <input\n              className=\"topMargin\"\n              name=\"password\"\n              type=\"text\"\n              value={password}\n              onChange={(event) => setPassword(event.target.value)}\n              required\n            />\n          </div>\n        </form>\n        <button className=\"topMargin\" onClick={() => submitForm()}>\n          Submit\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default SignupForm;\n","import React, { useState, useEffect } from \"react\";\nimport { createThread } from \"../helpFunc\";\n\nconst AllThreads = function AllThreads(props) {\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n\n  useEffect(() => {\n    const threadArea = document.getElementById(\"threadArea\");\n    const makeThreadArea = document.getElementById(\"makeThreadArea\");\n    function getThreads() {\n      if (!props.token) {\n        threadArea.innerHTML = \"Not logged in.\";\n        makeThreadArea.innerHTML = \"\";\n      }\n      fetch(process.env.REACT_APP_API_LOCATION + \"/threads\", {\n        method: \"GET\",\n        mode: \"cors\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          authorization: \"Bearer \" + props.token,\n        },\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          threadArea.innerHTML = \"\";\n          data.forEach((element) => {\n            threadArea.appendChild(createThread(element._id, element.title));\n          });\n        })\n        .catch((error) => {\n          return \"Error\" + error;\n        });\n    }\n    getThreads();\n  }, [props.token]);\n\n  function postNewThread(e) {\n    e.preventDefault();\n    if (!props.token) {\n      return \"Not logged in.\";\n    }\n    fetch(process.env.REACT_APP_API_LOCATION + \"/threads\", {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: \"Bearer \" + props.token,\n      },\n      body: JSON.stringify({\n        title: title,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (threadId) => {\n        window.location.href = `/thread/${threadId}`;\n        fetch(process.env.REACT_APP_API_LOCATION + \"/threads/\" + threadId, {\n          method: \"POST\",\n          mode: \"cors\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            authorization: \"Bearer \" + props.token,\n          },\n          body: JSON.stringify({\n            content: content,\n          }),\n        });\n      })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"Success making post\", data);\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n  }\n\n  return (\n    <div>\n      <div className=\"topMargin marginMiddle\">\n        <ul id=\"threadArea\">\n          <p> Loading threads, please wait. </p>\n        </ul>\n      </div>\n      <form\n        id=\"makeThreadArea\"\n        className=\"roundBorder topMargin leftMargin rightMargin lightWhite\"\n        onSubmit={(e) => postNewThread(e)}\n      >\n        <label className=\"underline\"> Make New Thread </label>\n        <div className=\"topMargin\">\n          <label htmlFor=\"title\"> Thread Title: </label>\n          <input\n            name=\"title\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n          ></input>\n        </div>\n        <div className=\"topMargin\">\n          <label htmlFor=\"content\"> New post content: </label>\n          <textarea\n            name=\"content\"\n            value={content}\n            onChange={(e) => setContent(e.target.value)}\n            className=\"bigInputBox\"\n          ></textarea>\n        </div>\n        <button type=\"submit\">\n          <img\n            src=\"https://i.ibb.co/tYdNk0J/feather.png\"\n            alt=\"feather\"\n            border=\"0\"\n          ></img>\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default AllThreads;\n","export function createThread(threadId, threadTitle) {\n  const mainLi = document.createElement(\"li\");\n  mainLi.key = threadId;\n  const img = document.createElement(\"img\");\n  img.src = \"https://i.ibb.co/bv5CNx7/hamburger-menu.png\";\n  img.alt = \"thread-logo\";\n  img.style.border = 0;\n  const link = document.createElement(\"a\");\n  link.href = \"/thread/\" + threadId;\n  link.classList = \"flexRow flexCrossCenter topMargin\";\n  const title = document.createElement(\"p\");\n  title.innerHTML = threadTitle;\n\n  link.appendChild(img);\n  link.appendChild(title);\n  mainLi.appendChild(link);\n  return mainLi;\n}\n","import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nconst MakeNewPost = function MakeNewPost(props) {\n  let { id } = useParams();\n  const [content, setContent] = useState(\"\");\n\n  function postNewPost(e) {\n    e.preventDefault();\n    if (!props.token) {\n      return \"Not logged in.\";\n    }\n    fetch(process.env.REACT_APP_API_LOCATION + \"/threads/\" + id, {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: \"Bearer \" + props.token,\n      },\n      body: JSON.stringify({\n        content: content,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"Success:\", data);\n        window.location.reload();\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n  }\n\n  return (\n    <form\n      className=\"roundBorder topMargin leftMargin rightMargin lightWhite\"\n      onSubmit={(e) => postNewPost(e)}\n    >\n      <label className=\"underline\" htmlFor=\"content\">\n        {\" \"}\n        New post content:{\" \"}\n      </label>\n      <textarea\n        name=\"content\"\n        value={content}\n        onChange={(e) => setContent(e.target.value)}\n        className=\"bigInputBox topMargin\"\n      ></textarea>\n      <br />\n      <button type=\"submit\">\n        <img\n          src=\"https://i.ibb.co/tYdNk0J/feather.png\"\n          alt=\"feather\"\n          border=\"0\"\n        ></img>\n        Submit\n      </button>\n    </form>\n  );\n};\n\nexport default MakeNewPost;\n","import React from \"react\";\nimport { useSearchParams, useLocation } from \"react-router-dom\";\n\nconst OneThreadPageNo = function OneThreadPageNo(props) {\n  let currentthreadUrl = useLocation().pathname;\n  let [searchParams] = useSearchParams();\n\n  let startPost = 0;\n  if (!isNaN(parseInt(searchParams.get(\"start\")))) {\n    startPost = parseInt(searchParams.get(\"start\"));\n  }\n\n  let totalPages = Math.floor(props.totalPostNo / 10) + 1;\n  let currentPage = Math.floor(startPost / 10) + 1;\n\n  function createOneBox(pageNo) {\n    if (pageNo === currentPage) {\n      return (\n        <span key={pageNo} className=\"pageBox halfLeftMargin\">\n          {\" \"}\n          {pageNo}{\" \"}\n        </span>\n      );\n    } else {\n      let link = currentthreadUrl + `?start=${(pageNo - 1) * 10}`;\n      return (\n        <span key={pageNo} className=\"pageBox halfLeftMargin\">\n          <a href={link}>{pageNo}</a>\n        </span>\n      );\n    }\n  }\n\n  function communicator() {\n    let loopList = [];\n    function dots() {\n      return <p className=\"halfLeftMargin\"> ... </p>;\n    }\n    /* Thinking of a better solution that isn't this messy. It should show the first page, last page and the two pages next to the surrounding page. \n    / If there is a gap between the first/last and the two surrounding, there will be dots in between. */\n    if (currentPage - 1 >= 1) {\n      if (currentPage !== 2) {\n        loopList.push(dots());\n      }\n      loopList.push(createOneBox(currentPage - 1));\n    }\n    loopList.push(createOneBox(currentPage));\n    if (currentPage + 1 <= totalPages) {\n      loopList.push(createOneBox(currentPage + 1));\n    }\n    if (currentPage + 1 < totalPages) {\n      if (currentPage + 2 === totalPages) {\n        loopList.push(dots());\n      }\n      loopList.push(createOneBox(totalPages));\n    }\n    return loopList;\n  }\n\n  return (\n    <nav\n      id=\"pageNoNav\"\n      className=\"topMargin smallText flexRow flexCrossCenter flexEnd\"\n    >\n      <span>\n        {props.totalPostNo} posts • Page {currentPage} of {totalPages} •\n      </span>\n      {communicator()}\n    </nav>\n  );\n};\n\nexport default OneThreadPageNo;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams, useSearchParams } from \"react-router-dom\";\nimport MakeNewPost from \"./makeNewPost\";\nimport OneThreadPageNo from \"./oneThreadPageNo\";\n\nconst OneThread = function OneThread(props) {\n  let { id } = useParams();\n  let [searchParams, setSearchParams] = useSearchParams();\n  let [postNo, setPostNo] = useState(\"Loading\");\n\n  useEffect(() => {\n    const postArea = document.getElementById(\"postArea\");\n\n    function createPost(threadTitle, username, postContent, time, key) {\n      const mainLi = document.createElement(\"li\");\n      mainLi.classList = \"flexChange postBox roundBorder lightWhite topMargin\";\n      mainLi.key = key;\n\n      const col1 = document.createElement(\"div\");\n      col1.classList = \"gridColumn1\";\n\n      const col2 = document.createElement(\"div\");\n      col2.classList = \"gridColumn2\";\n      col2.style.borderLeft = \"1px solid black\";\n\n      const title = document.createElement(\"a\");\n      title.innerHTML = threadTitle;\n      title.href = \"/\";\n\n      const timestamp = document.createElement(\"p\");\n      timestamp.classList = \"smallText\";\n      timestamp.innerHTML = `by ${username} >> ${new Date(time)}`;\n\n      const content = document.createElement(\"p\");\n      content.classList = \"topMargin\";\n      content.innerHTML = postContent;\n\n      const postmaker = document.createElement(\"p\");\n      postmaker.classList = \"gridColumn2 halfLeftMargin\";\n      postmaker.innerHTML = `${username}`;\n\n      col1.appendChild(title);\n      col1.appendChild(timestamp);\n      col1.appendChild(content);\n      col2.appendChild(postmaker);\n\n      const changePostLinks = document.createElement(\"span\");\n      changePostLinks.classList = \"flexRow topMargin\";\n\n      if (username === props.username) {\n        changePostLinks.appendChild(editLink(key, postContent));\n      }\n      if (props.userType === \"administrator\" || props.userType === \"owner\") {\n        changePostLinks.appendChild(deleteLink(key));\n      }\n      if (changePostLinks.innerHTML !== \"\") {\n        col1.appendChild(changePostLinks);\n      }\n\n      mainLi.appendChild(col1);\n      mainLi.appendChild(col2);\n      return mainLi;\n    }\n\n    function deleteLink(postId) {\n      const link = document.createElement(\"p\");\n      link.classList = \"smallText blueLink halfLeftMargin\";\n      link.innerHTML = \"Delete\";\n      link.addEventListener(\"click\", () => {\n        fetch(\n          process.env.REACT_APP_API_LOCATION + `/threads/${postId}/delete`,\n          {\n            method: \"POST\",\n            mode: \"cors\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              authorization: \"Bearer \" + props.token,\n            },\n          }\n        )\n          .then((response) => response.json())\n          .then((data) => {\n            console.log(data);\n            window.location.reload();\n          })\n          .catch((error) => {\n            return \"Error\" + error;\n          });\n      });\n      return link;\n    }\n\n    function editLink(postId, postContent) {\n      const hideEditPanel = document.createElement(\"div\");\n      hideEditPanel.style.display = \"none\";\n      hideEditPanel.classList = \"flexColumn\";\n\n      const editBox = document.createElement(\"textarea\");\n      editBox.className = \"bigInputBox\";\n      editBox.value = postContent;\n\n      const editButton = document.createElement(\"button\");\n      editButton.innerHTML = \"Edit\";\n      editButton.addEventListener(\"click\", () => {\n        fetch(process.env.REACT_APP_API_LOCATION + `/threads/${postId}/edit`, {\n          method: \"POST\",\n          mode: \"cors\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            authorization: \"Bearer \" + props.token,\n          },\n          body: JSON.stringify({\n            content: editBox.value,\n          }),\n        })\n          .then((response) => response.json())\n          .then((data) => {\n            console.log(data);\n            window.location.reload();\n          })\n          .catch((error) => {\n            return \"Error\" + error;\n          });\n      });\n\n      hideEditPanel.appendChild(editBox);\n      hideEditPanel.appendChild(editButton);\n\n      const link = document.createElement(\"p\");\n      link.classList = \"smallText blueLink\";\n      link.innerHTML = \"Edit\";\n      link.addEventListener(\"click\", () => {\n        if (hideEditPanel.style.display === \"none\") {\n          hideEditPanel.style.display = \"flex\";\n        } else {\n          hideEditPanel.style.display = \"none\";\n        }\n      });\n\n      const wrapperDiv = document.createElement(\"div\");\n      wrapperDiv.appendChild(link);\n      wrapperDiv.appendChild(hideEditPanel);\n\n      return wrapperDiv;\n    }\n\n    function getPosts() {\n      if (!props.token) {\n        postArea.innerHTML = \"Not logged in.\";\n      }\n      let startPost = 0;\n      if (!isNaN(parseInt(searchParams.get(\"start\")))) {\n        startPost = parseInt(searchParams.get(\"start\"));\n      }\n      fetch(\n        process.env.REACT_APP_API_LOCATION +\n          `/threads/${id}?start=${startPost}`,\n        {\n          method: \"GET\",\n          mode: \"cors\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            authorization: \"Bearer \" + props.token,\n          },\n        }\n      )\n        .then((response) => response.json())\n        .then((data) => {\n          if (data.length === 0) {\n            const message = document.createElement(\"p\");\n            message.innerHTML = \"No posts in this thread. Make a post now!\";\n            postArea.innerHTML = \"\";\n            postArea.appendChild(message);\n          } else {\n            postArea.innerHTML = \"\";\n            data.forEach((element) => {\n              const newPost = createPost(\n                element.thread.title,\n                element.author.username,\n                element.content,\n                element.time,\n                element._id\n              );\n              postArea.appendChild(newPost);\n            });\n          }\n        })\n        .catch((error) => {\n          return \"Error\" + error;\n        });\n    }\n\n    function checkPosts() {\n      fetch(process.env.REACT_APP_API_LOCATION + `/threads/${id}/count`, {\n        method: \"GET\",\n        mode: \"cors\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          authorization: \"Bearer \" + props.token,\n        },\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          setPostNo(data);\n        });\n    }\n\n    checkPosts();\n    getPosts();\n  }, [\n    props.token,\n    props.userType,\n    props.username,\n    id,\n    searchParams,\n    setSearchParams,\n  ]);\n\n  return (\n    <div>\n      <OneThreadPageNo totalPostNo={postNo} />\n      <ul id=\"postArea\">\n        <p> Loading, please wait. </p>\n      </ul>\n      <OneThreadPageNo totalPostNo={postNo} />\n      <MakeNewPost token={props.token} />\n    </div>\n  );\n};\n\nexport default OneThread;\n","import React, { useEffect } from \"react\";\n\nconst AdminPage = function AdminPage(props) {\n  useEffect(() => {\n    function createUser(userId, userName, userType) {\n      const mainLi = document.createElement(\"li\");\n      mainLi.innerHTML = userName;\n      const changeAuthButton = document.createElement(\"button\");\n      if (userType === \"user\") {\n        changeAuthButton.innerHTML = \"Make admin\";\n        changeAuthButton.addEventListener(\"click\", () => {\n          fetch(\n            process.env.REACT_APP_API_LOCATION + `/user/admin/${userId}/make`,\n            {\n              method: \"POST\",\n              mode: \"cors\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                authorization: \"Bearer \" + props.token,\n              },\n            }\n          )\n            .then((response) => response.json())\n            .then((data) => {\n              console.log(data);\n              window.location.reload();\n            })\n            .catch((error) => {\n              return \"Error\" + error;\n            });\n        });\n        mainLi.appendChild(changeAuthButton);\n      } else if (userType === \"administrator\") {\n        changeAuthButton.innerHTML = \"Remove admin\";\n        changeAuthButton.addEventListener(\"click\", () => {\n          fetch(\n            process.env.REACT_APP_API_LOCATION + `/user/admin/${userId}/remove`,\n            {\n              method: \"POST\",\n              mode: \"cors\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                authorization: \"Bearer \" + props.token,\n              },\n            }\n          )\n            .then((response) => response.json())\n            .then((data) => {\n              console.log(data);\n              window.location.reload();\n            })\n            .catch((error) => {\n              return \"Error\" + error;\n            });\n        });\n        mainLi.appendChild(changeAuthButton);\n      }\n      return mainLi;\n    }\n    const mainBox = document.getElementById(\"msgBox\");\n    const ownerArea = document.getElementById(\"ownerArea\");\n    const adminArea = document.getElementById(\"adminArea\");\n    const userArea = document.getElementById(\"userArea\");\n    function getUsers() {\n      if (!props.token) {\n        mainBox.innerHTML = \"Not logged in.\";\n      }\n      fetch(process.env.REACT_APP_API_LOCATION + \"/user\", {\n        method: \"GET\",\n        mode: \"cors\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          authorization: \"Bearer \" + props.token,\n        },\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(data);\n          data.forEach((element) => {\n            const oneUser = createUser(\n              element._id,\n              element.username,\n              element.type\n            );\n            switch (element.type) {\n              case \"user\":\n                userArea.appendChild(oneUser);\n                break;\n              case \"administrator\":\n                adminArea.appendChild(oneUser);\n                break;\n              case \"owner\":\n                ownerArea.appendChild(oneUser);\n                break;\n              default:\n                throw new Error(\"User is of erroneous type\" + element.type);\n            }\n          });\n        })\n        .catch((error) => {\n          return \"Error\" + error;\n        });\n    }\n    getUsers();\n  }, [props.token]);\n\n  return (\n    <div className=\"darkBlue topMargin marginMiddle\">\n      <div id=\"msgBox\">\n        <div>\n          <p> Permission rules: </p>\n          <p> Owners may add admins, remove admins and delete posts. </p>\n          <p> Admins may add admins and delete posts. </p>\n          <p> Users cannot add/remove admins and cannot delete posts.</p>\n          <p>\n            {\" \"}\n            All members can edit their own posts. Posts cannot be edited by\n            others, regardless of permissions.{\" \"}\n          </p>\n        </div>\n      </div>\n      <div id=\"owner\" className=\"topMargin\">\n        Owners\n        <ul id=\"ownerArea\"></ul>\n      </div>\n      <div id=\"admin\" className=\"topMargin\">\n        Administrators\n        <ul id=\"adminArea\"></ul>\n      </div>\n      <div id=\"user\" className=\"topMargin\">\n        Users\n        <ul id=\"userArea\"></ul>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminPage;\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Routes, Route, Link } from \"react-router-dom\";\nimport LoginForm from \"./components/loginForm\";\nimport SignupForm from \"./components/signupForm\";\nimport AllThreads from \"./components/allThreads\";\nimport OneThread from \"./components/oneThread\";\nimport AdminPage from \"./components/adminPage\";\nimport \"./stylesheets/reset.css\";\nimport \"./stylesheets/utility.css\";\nimport \"./stylesheets/main.css\";\nimport \"./stylesheets/submitForm.css\";\n\nimport Cookies from \"universal-cookie\";\nconst cookies = new Cookies();\n\nfunction App() {\n  const [jwttoken, setJwttoken] = useState(cookies.get(\"token\"));\n  const [username, setUsername] = useState(\"\");\n  const [userType, setUserType] = useState(\"\");\n\n  useEffect(() => {\n    function getState() {\n      fetch(process.env.REACT_APP_API_LOCATION + \"/user/current\", {\n        method: \"GET\",\n        mode: \"cors\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          authorization: \"Bearer \" + jwttoken,\n        },\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          if (data !== \"User not found\") {\n            setUsername(data.username);\n            setUserType(data.type);\n          }\n        })\n        .catch((error) => {\n          return \"Error\" + error;\n        });\n    }\n    getState();\n  });\n\n  function logout() {\n    cookies.remove(\"token\");\n    setUsername(\"\");\n    setUserType(\"\");\n    window.location.reload();\n  }\n\n  function makeNavbar() {\n    if (username === \"\") {\n      return (\n        <nav className=\"roundBorder flexRow flexCrossCenter topMargin lightWhite\">\n          <div>\n            <Link to=\"/\"> Main Page </Link>\n          </div>\n          <div className=\"flexChange\"></div>\n          <div className=\"leftMargin\">\n            <img\n              src=\"https://i.ibb.co/Y0FGSVL/modify.png\"\n              alt=\"modify\"\n              border=\"0\"\n            ></img>\n            <Link to=\"/signup\"> Register </Link>\n          </div>\n          <div className=\"leftMargin\">\n            <img\n              src=\"https://i.ibb.co/44mwbdv/power-off-line.png\"\n              alt=\"power-off-line\"\n              border=\"0\"\n            ></img>\n            <Link to=\"/login\"> Login </Link>\n          </div>\n        </nav>\n      );\n    } else if (userType === \"user\") {\n      return (\n        <nav className=\"roundBorder flexRow flexCrossCenter topMargin lightWhite\">\n          <Link to=\"/\"> Main Page </Link>\n          <div className=\"flexChange\"></div>\n          <p> Welcome back, {username} </p>\n          <img\n            src=\"https://i.ibb.co/44mwbdv/power-off-line.png\"\n            alt=\"power-off-line\"\n            border=\"0\"\n            className=\"leftMargin\"\n          ></img>\n          <p onClick={() => logout()} className=\"blueLink\">\n            {\" \"}\n            Logout{\" \"}\n          </p>\n        </nav>\n      );\n    } else {\n      return (\n        <nav className=\"roundBorder flexRow flexCrossCenter topMargin lightWhite\">\n          <Link to=\"/\"> Main Page </Link>\n          <div className=\"flexChange\"></div>\n          <Link to=\"/admin\"> Admin Portal </Link>\n          <div className=\"leftMargin\">\n            <p> Welcome back, {username} </p>\n          </div>\n          <img\n            src=\"https://i.ibb.co/44mwbdv/power-off-line.png\"\n            alt=\"power-off-line\"\n            border=\"0\"\n            className=\"leftMargin\"\n          ></img>\n          <p onClick={() => logout()} className=\"blueLink\">\n            {\" \"}\n            Logout{\" \"}\n          </p>\n        </nav>\n      );\n    }\n  }\n\n  return (\n    <div className=\"main roundBorder mediumBlue marginMiddle topMargin\">\n      <BrowserRouter>\n        {makeNavbar()}\n        <Routes>\n          <Route\n            path=\"/login\"\n            element={<LoginForm onChangeToken={setJwttoken} />}\n          />\n          <Route path=\"/signup\" element={<SignupForm />} />\n          <Route path=\"/admin\" element={<AdminPage token={jwttoken} />} />\n          <Route\n            path=\"/thread/:id\"\n            element={\n              <OneThread\n                token={jwttoken}\n                username={username}\n                userType={userType}\n              />\n            }\n          />\n          <Route path=\"*\" element={<AllThreads token={jwttoken} />} />\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}